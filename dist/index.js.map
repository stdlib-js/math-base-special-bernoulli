{
  "version": 3,
  "sources": ["../lib/bernoulli.json", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["[\n  1.00000000000000000000000000000000000000000,\n  0.166666666666666666666666666666666666666667,\n  -0.0333333333333333333333333333333333333333333,\n  0.0238095238095238095238095238095238095238095,\n  -0.0333333333333333333333333333333333333333333,\n  0.0757575757575757575757575757575757575757576,\n  -0.253113553113553113553113553113553113553114,\n  1.16666666666666666666666666666666666666667,\n  -7.09215686274509803921568627450980392156863,\n  54.9711779448621553884711779448621553884712,\n  -529.124242424242424242424242424242424242424,\n  6192.12318840579710144927536231884057971014,\n  -86580.2531135531135531135531135531135531136,\n  1.42551716666666666666666666666666666666667e6,\n  -2.72982310678160919540229885057471264367816e7,\n  6.01580873900642368384303868174835916771401e8,\n  -1.51163157670921568627450980392156862745098e10,\n  4.29614643061166666666666666666666666666667e11,\n  -1.37116552050883327721590879485616327721591e13,\n  4.88332318973593166666666666666666666666667e14,\n  -1.92965793419400681486326681448632668144863e16,\n  8.41693047573682615000553709856035437430786e17,\n  -4.03380718540594554130768115942028985507246e19,\n  2.11507486380819916056014539007092198581560e21,\n  -1.20866265222965259346027311937082525317819e23,\n  7.50086674607696436685572007575757575757576e24,\n  -5.03877810148106891413789303052201257861635e26,\n  3.65287764848181233351104308429711779448622e28,\n  -2.84987693024508822262691464329106781609195e30,\n  2.38654274996836276446459819192192149717514e32,\n  -2.13999492572253336658107447651910973926742e34,\n  2.05009757234780975699217330956723102516667e36,\n  -2.09380059113463784090951852900279701847092e38,\n  2.27526964884635155596492603527692645814700e40,\n  -2.62577102862395760473030497361582020814490e42,\n  3.21250821027180325182047923042649852435219e44,\n  -4.15982781667947109139170744952623589366896e46,\n  5.69206954820352800238834562191210586444805e48,\n  -8.21836294197845756922906534686173330145509e50,\n  1.25029043271669930167323398297028955241772e53,\n  -2.00155832332483702749253291988132987687242e55,\n  3.36749829153643742333966769033387530162196e57,\n  -5.94709705031354477186604968440515408405791e59,\n  1.10119103236279775595641307904376916046305e62,\n  -2.13552595452535011886583850190410656789733e64,\n  4.33288969866411924196166130593792062184514e66,\n  -9.18855282416693282262005552155018971389604e68,\n  2.03468967763290744934550279902200200659751e71,\n  -4.70038339580357310785752555350060606545967e73,\n  1.13180434454842492706751862577339342678904e76,\n  -2.83822495706937069592641563364817647382847e78,\n  7.40642489796788506297508271409209841768797e80,\n  -2.00964548027566044834656196727153631868673e83,\n  5.66571700508059414457193460305193569614195e85,\n  -1.65845111541362169158237133743199123014950e88,\n  5.03688599504923774192894219151801548124424e90,\n  -1.58614682376581863693634015729664387827410e93,\n  5.17567436175456269840732406825071225612408e95,\n  -1.74889218402171173396900258776181591451415e98,\n  6.11605199949521852558245252642641677807677e100,\n  -2.21227769127078349422883234567129324455732e103,\n  8.27227767987709698542210624599845957312047e105,\n  -3.19589251114157095835916343691808148735263e108,\n  1.27500822233877929823100243029266798669572e111,\n  -5.25009230867741338994028246245651754469199e113,\n  2.23018178942416252098692981988387281437383e116,\n  -9.76845219309552044386335133989802393011669e118,\n  4.40983619784529542722726228748131691918758e121,\n  -2.05085708864640888397293377275830154864566e124,\n  9.82144332797912771075729696020975210414919e126,\n  -4.84126007982088805087891967099634127611305e129,\n  2.45530888014809826097834674040886903996737e132,\n  -1.28069268040847475487825132786017857218118e135,\n  6.86761671046685811921018885984644004360924e137,\n  -3.78464685819691046949789954163795568144895e140,\n  2.14261012506652915508713231351482720966602e143,\n  -1.24567271371836950070196429616376072194583e146,\n  7.43457875510001525436796683940520613117807e148,\n  -4.55357953046417048940633332233212748767721e151,\n  2.86121128168588683453638472510172325229190e154,\n  -1.84377235520338697276882026536287854875414e157,\n  1.21811545362210466995013165065995213558174e160,\n  -8.24821871853141215484818457296893447301419e162,\n  5.72258779378329433296516498142978615918685e165,\n  -4.06685305250591047267679693831158655602196e168,\n  2.95960920646420500628752695815851870426379e171,\n  -2.20495225651894575090311752273445984836379e174,\n  1.68125970728895998058311525151360665754464e177,\n  -1.31167362135569576486452806355817153004431e180,\n  1.04678940094780380821832853929823089643829e183,\n  -8.54328935788337077185982546299082774593270e185,\n  7.12878213224865423522884066771438224721245e188,\n  -6.08029314555358993000847118686477458461988e191,\n  5.29967764248499239300942910043247266228490e194,\n  -4.71942591687458626443646229013379911103761e197,\n  4.29284137914029810894168296541074669045521e200,\n  -3.98767449682322074434477655542938795106651e203,\n  3.78197804193588827138944181161393327898220e206,\n  -3.66142336836811912436858082151197348755196e209,\n  3.61760902723728623488554609298914089477541e212,\n  -3.64707726451913543621383088655499449048682e215,\n  3.75087554364544090983452410104814189306842e218,\n  -3.93458672964390282694891288533713429355657e221,\n  4.20882111481900820046571171111494898242731e224,\n  -4.59022962206179186559802940573325591059371e227,\n  5.10317257726295759279198185106496768539760e230,\n  -5.78227623036569554015377271242917142512200e233,\n  6.67624821678358810322637794412809363451080e236,\n  -7.85353076444504163225916259639312444428230e239,\n  9.41068940670587255245443288258762485293948e242,\n  -1.14849338734651839938498599206805592548354e246,\n  1.42729587428487856771416320087122499897180e249,\n  -1.80595595869093090142285728117654560926719e252,\n  2.32615353076608052161297985184708876161736e255,\n  -3.04957517154995947681942819261542593785327e258,\n  4.06858060764339734424012124124937318633684e261,\n  -5.52310313219743616252320044093186392324280e264,\n  7.62772793964343924869949690204961215533859e267,\n  -1.07155711196978863132793524001065396932667e271,\n  1.53102008959691884453440916153355334355847e274,\n  -2.22448916821798346676602348865048510824835e277,\n  3.28626791906901391668189736436895275365183e280,\n  -4.93559289559603449020711938191575963496999e283,\n  7.53495712008325067212266049779283956727824e286,\n  -1.16914851545841777278088924731655041783900e290,\n  1.84352614678389394126646201597702232396492e293,\n  -2.95368261729680829728014917350525183485207e296,\n  4.80793212775015697668878704043264072227967e299,\n  -7.95021250458852528538243631671158693036798e302,\n  1.33527841873546338750122832017820518292039e306\n]\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math-base-assert-is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isOdd = require( '@stdlib/math-base-assert-is-odd' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar BERNOULLI = require( './bernoulli.json' );\n\n\n// VARIABLES //\n\nvar MAX_BERNOULLI = 258|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes the nth Bernoulli number.\n*\n* @param {NonNegativeInteger} n - the Bernoulli number to compute\n* @returns {number} Bernoulli number\n*\n* @example\n* var y = bernoulli( 0 );\n* // returns 1.0\n*\n* @example\n* var y = bernoulli( 1 );\n* // returns 0.5\n*\n* @example\n* var y = bernoulli( 2 );\n* // returns ~0.167\n*\n* @example\n* var y = bernoulli( 3 );\n* // returns 0.0\n*\n* @example\n* var y = bernoulli( 4 );\n* // returns ~-0.033\n*\n* @example\n* var y = bernoulli( 5 );\n* // returns 0.0\n*\n* @example\n* var y = bernoulli( 20 );\n* // returns ~-529.124\n*\n* @example\n* var y = bernoulli( 260 );\n* // returns -Infinity\n*\n* @example\n* var y = bernoulli( 262 );\n* // returns Infinity\n*\n* @example\n* var y = bernoulli( NaN );\n* // returns NaN\n*/\nfunction bernoulli( n ) {\n\tif ( isnan( n ) || !isNonNegativeInteger( n ) ) {\n\t\treturn NaN;\n\t}\n\tif ( n === 1 ) {\n\t\treturn 0.5;\n\t}\n\tif ( isOdd( n ) ) {\n\t\treturn 0.0;\n\t}\n\tif ( n > MAX_BERNOULLI ) {\n\t\treturn ( isOdd( n/2.0 ) ) ? PINF : NINF;\n\t}\n\treturn BERNOULLI[ n/2 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = bernoulli;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the nth Bernoulli number.\n*\n* @module @stdlib/math-base-special-bernoulli\n*\n* @example\n* var bernoulli = require( '@stdlib/math-base-special-bernoulli' );\n*\n* var y = bernoulli( 0 );\n* // returns 1.0\n*\n* y = bernoulli( 1 );\n* // returns 0.5\n*\n* y = bernoulli( 2 );\n* // returns ~0.166\n*\n* y = bernoulli( 3 );\n* // returns 0.0\n*\n* y = bernoulli( 4 );\n* // returns ~-0.033\n*\n* y = bernoulli( 5 );\n* // returns 0.0\n*\n* y = bernoulli( 20 );\n* // returns ~-529.124\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,CAAAA,EAAA,SACE,EACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,qBACA,sBACA,oBACA,sBACA,oBACA,sBACA,oBACA,kBACA,kBACA,qBACA,oBACA,qBACA,mBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBACA,oBACA,sBACA,oBACA,sBACA,oBACA,sBACA,qBACA,sBACA,oBACA,sBACA,oBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,sBACA,sBACA,sBACA,qBACA,uBACA,sBACA,uBACA,oBACA,uBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,uBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,uBACA,sBACA,sBACA,sBACA,uBACA,qBACA,sBACA,sBACA,uBACA,sBACA,uBACA,qBACA,sBACA,qBACA,uBACA,qBACA,sBACA,qBACA,sBACA,qBACF,ICnIA,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAuB,QAAS,iDAAkD,EAClFC,EAAQ,QAAS,iCAAkC,EACnDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAY,IAKZC,EAAgB,IAmDpB,SAASC,EAAWC,EAAI,CACvB,OAAKP,EAAOO,CAAE,GAAK,CAACR,EAAsBQ,CAAE,EACpC,IAEHA,IAAM,EACH,GAEHN,EAAOM,CAAE,EACN,EAEHA,EAAIF,EACCJ,EAAOM,EAAE,CAAI,EAAMJ,EAAOD,EAE7BE,EAAWG,EAAE,CAAE,CACvB,CAKAT,EAAO,QAAUQ,IClDjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_bernoulli", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "isNonNegativeInteger", "isnan", "isOdd", "NINF", "PINF", "BERNOULLI", "MAX_BERNOULLI", "bernoulli", "n", "main"]
}
